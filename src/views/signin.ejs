<div class="signin container mt-5">
  <!-- Error div, render content only if error is passed from backend -->
  <div class="error mb-3">
    <% if (typeof error !== 'undefined' && error) { %>
      <div class="alert alert-danger">
        <%= error %>
      </div>
    <% } %>
  </div>
  
  <!-- Success message div, render content only if message is passed from backend -->
  <div class="message mb-3">
    <% if (typeof message !== 'undefined' && message) { %>
      <div class="alert alert-success">
        <%= message %>
      </div>
    <% } %>
  </div>

  <div class="card p-4 shadow-sm">
    <h2 class="mb-4 text-center">Sign In</h2>

    <!-- Email and Password Fields -->
    <div class="form-group mb-3">
      <label for="email">Email</label>
      <input type="email" class="form-control" id="email" placeholder="Enter your email" required>
    </div>

    <div class="form-group mb-3">
      <label for="password">Password</label>
      <input type="password" class="form-control" id="password" placeholder="Enter your password" required>
    </div>

    <!-- Sign In Button -->
    <button id="signInButton" type="button" class="btn btn-primary w-100">Sign In</button>

    <!-- Forgot Password Button -->
    <button id="forgotPasswordButton" type="button" class="btn btn-link w-100 mt-3">Forgot Password?</button>

    <!-- Sign Up Button (Link to /api/users/signup) -->
    <div class="text-center mt-3">
      <a href="/api/users/signup" class="btn btn-secondary">Sign Up</a>
    </div>
  </div>
</div>

<script>
  // Function to handle GET requests with Authorization header using token
  async function handleGetRequest(url) {
    const token = localStorage.getItem('authToken'); // Retrieve the token from localStorage and assign to token

    if (!token) {
      // Clear error div and render session expired message
      document.querySelector('.error').innerHTML = `
        <div class="alert alert-danger">
          Session expired, please sign in again.
        </div>
      `;
      document.querySelector('.message').innerHTML = ''; // Clear the message div
      return;
    }

    try {
      const response = await fetch(url, {
        method: 'GET',
        headers: {
          'Authorization': token, // Attach the token directly to the Authorization header
          'Content-Type': 'application/json',
        },
      });

      const contentType = response.headers.get('Content-Type');

      // Check if the response is HTML or JSON
      if (contentType && contentType.includes('text/html')) {
        // If HTML, load the new page
        const html = await response.text();

        // Update the browser URL without reloading the page
        history.pushState(null, null, url);

        // Replace the current document content with the new HTML content
        document.open();
        document.write(html);
        document.close();
      } else if (contentType && contentType.includes('application/json')) {
        // If JSON, append error to error div after clearing the div
        const jsonResponse = await response.json();

        document.querySelector('.error').innerHTML = ''; // Clear previous errors
        document.querySelector('.message').innerHTML = ''; // Clear the message div
        if (jsonResponse.error) {
          document.querySelector('.error').innerHTML = `
            <div class="alert alert-danger">
              ${jsonResponse.error}
            </div>
          `;
        }
      }
    } catch (error) {
      console.error('Error fetching data:', error);
      document.querySelector('.error').innerHTML = `
        <div class="alert alert-danger">
          An error occurred while fetching data. Please try again.
        </div>
      `;
      document.querySelector('.message').innerHTML = ''; // Clear the message div
    }
  }

  // Event listener for sign-in button
  document.getElementById('signInButton').addEventListener('click', async () => {
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;

    // Clear previous error messages
    document.querySelector('.error').innerHTML = '';
    document.querySelector('.message').innerHTML = ''; // Clear the message div

    try {
      const response = await fetch('http://localhost:3200/api/users/signIn', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email, password }),
      });

      const result = await response.json();

      if (result.message === 'failure') {
        // Clear the error message area
        document.querySelector('.error').innerHTML = '';
        document.querySelector('.message').innerHTML = ''; // Clear the message div

        document.querySelector('.error').innerHTML = `
          <div class="alert alert-danger">
            ${result.error}
          </div>
        `;
      } else {
        const token = result.token; // Assuming token is returned in the result object
        localStorage.setItem('authToken', token); // Store token in localStorage

        // Redirect or call handleGetRequest
        const url = 'http://localhost:3200/api/users/home';
        handleGetRequest(url); // Call the function with the URL
      }
    } catch (error) {
      console.error('Error:', error);
      document.querySelector('.error').innerHTML = `
        <div class="alert alert-danger">
          An unexpected error occurred. Please try again later.
        </div>
      `;
      document.querySelector('.message').innerHTML = ''; // Clear the message div
    }
  });

  // Event listener for forgot password button
  document.getElementById('forgotPasswordButton').addEventListener('click', async () => {
    try {
      const response = await fetch('http://localhost:3200/api/users/signIn/forgot_password', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      const contentType = response.headers.get('Content-Type');

      if (contentType && contentType.includes('text/html')) {
        const html = await response.text();
        document.open();
        document.write(html);
        document.close();
      }
    } catch (error) {
      console.error('Error fetching forgot password page:', error);
      document.querySelector('.error').innerHTML = `
        <div class="alert alert-danger">
          An error occurred while fetching the forgot password page. Please try again.
        </div>
      `;
      document.querySelector('.message').innerHTML = ''; // Clear the message div
    }
  });
</script>
